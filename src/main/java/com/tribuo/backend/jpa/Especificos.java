package com.tribuo.backend.jpa;
// Generated Jun 2, 2017 9:58:33 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Especificos generated by hbm2java
 */
@Entity
@Table(name = "especificos",
        catalog = "tribuo"
)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Especificos implements java.io.Serializable {

    private int idEspecificos;
    private Subcategorias subcategorias;
    private String nombreEspecifico;
    private Set<Productos> productoses;

    /**
     *
     */
    public Especificos() {
        this.productoses = new HashSet<>(0);
    }

    /**
     *
     * @param subcategorias
     * @param nombreEspecifico
     */
    public Especificos(Subcategorias subcategorias, String nombreEspecifico) {
        this.productoses = new HashSet<>(0);
        this.subcategorias = subcategorias;
        this.nombreEspecifico = nombreEspecifico;
    }

    /**
     *
     * @param subcategorias
     * @param nombreEspecifico
     * @param productoses
     */
    public Especificos(Subcategorias subcategorias, String nombreEspecifico, Set<Productos> productoses) {
        this.productoses = new HashSet<>(0);
        this.subcategorias = subcategorias;
        this.nombreEspecifico = nombreEspecifico;
        this.productoses = productoses;
    }

    /**
     *
     * @return
     */
    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id_especificos", unique = true, nullable = false)
    public int getIdEspecificos() {
        return this.idEspecificos;
    }

    /**
     *
     * @param idEspecificos
     */
    public void setIdEspecificos(int idEspecificos) {
        this.idEspecificos = idEspecificos;
    }

    /**
     *
     * @return
     */
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "subcategoria", nullable = false)
    public Subcategorias getSubcategorias() {
        return this.subcategorias;
    }

    /**
     *
     * @param subcategorias
     */
    public void setSubcategorias(Subcategorias subcategorias) {
        this.subcategorias = subcategorias;
    }

    /**
     *
     * @return
     */
    @Column(name = "nombre_especifico", nullable = false, length = 75)
    public String getNombreEspecifico() {
        return this.nombreEspecifico;
    }

    /**
     *
     * @param nombreEspecifico
     */
    public void setNombreEspecifico(String nombreEspecifico) {
        this.nombreEspecifico = nombreEspecifico;
    }

    /**
     *
     * @return
     */
    @JsonIgnore
    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(name = "productos_especifico", catalog = "tribuo", joinColumns = {
        @JoinColumn(name = "especificos", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "producto", nullable = false, updatable = false)})
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
    public Set<Productos> getProductoses() {
        return this.productoses;
    }

    /**
     *
     * @param productoses
     */
    public void setProductoses(Set<Productos> productoses) {
        this.productoses = productoses;
    }

}
