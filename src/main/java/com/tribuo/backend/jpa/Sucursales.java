package com.tribuo.backend.jpa;
// Generated Oct 28, 2017 12:35:33 PM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Sucursales generated by hbm2java
 */
@Entity
@Table(name="sucursales"
    ,catalog="tribuo"
    , uniqueConstraints = @UniqueConstraint(columnNames={"id_sucursal", "tienda"}) 
)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Sucursales  implements java.io.Serializable {


     private int idSucursal;
     private Tiendas tiendas;
     private String direccion;
     private String ciudad;
     private Set<Ventas> ventases = new HashSet<Ventas>(0);
     private Set<ProductosTiendas> productosTiendases = new HashSet<ProductosTiendas>(0);
     private Set<Compras> comprases = new HashSet<Compras>(0);
     private Set<Distribuidores> distribuidoreses = new HashSet<Distribuidores>(0);

    public Sucursales() {
    }

	
    public Sucursales(int idSucursal, Tiendas tiendas, String direccion, String ciudad) {
        this.idSucursal = idSucursal;
        this.tiendas = tiendas;
        this.direccion = direccion;
        this.ciudad = ciudad;
    }
    public Sucursales(int idSucursal, Tiendas tiendas, String direccion, String ciudad, Set<Ventas> ventases, Set<ProductosTiendas> productosTiendases, Set<Compras> comprases, Set<Distribuidores> distribuidoreses) {
       this.idSucursal = idSucursal;
       this.tiendas = tiendas;
       this.direccion = direccion;
       this.ciudad = ciudad;
       this.ventases = ventases;
       this.productosTiendases = productosTiendases;
       this.comprases = comprases;
       this.distribuidoreses = distribuidoreses;
    }
   
     @Id 

    
    @Column(name="id_sucursal", unique=true, nullable=false)
    public int getIdSucursal() {
        return this.idSucursal;
    }
    
    public void setIdSucursal(int idSucursal) {
        this.idSucursal = idSucursal;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="tienda", nullable=false)
    public Tiendas getTiendas() {
        return this.tiendas;
    }
    
    public void setTiendas(Tiendas tiendas) {
        this.tiendas = tiendas;
    }

    
    @Column(name="direccion", nullable=false, length=75)
    public String getDireccion() {
        return this.direccion;
    }
    
    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    
    @Column(name="ciudad", nullable=false, length=75)
    public String getCiudad() {
        return this.ciudad;
    }
    
    public void setCiudad(String ciudad) {
        this.ciudad = ciudad;
    }

@JsonIgnore    
    @OneToMany(fetch=FetchType.EAGER, mappedBy="sucursales")
    public Set<Ventas> getVentases() {
        return this.ventases;
    }
    
    public void setVentases(Set<Ventas> ventases) {
        this.ventases = ventases;
    }

@JsonIgnore    
    @OneToMany(fetch=FetchType.EAGER, mappedBy="sucursales")
    public Set<ProductosTiendas> getProductosTiendases() {
        return this.productosTiendases;
    }
    
    public void setProductosTiendases(Set<ProductosTiendas> productosTiendases) {
        this.productosTiendases = productosTiendases;
    }

@JsonIgnore    
    @OneToMany(fetch=FetchType.EAGER, mappedBy="sucursales")
    public Set<Compras> getComprases() {
        return this.comprases;
    }
    
    public void setComprases(Set<Compras> comprases) {
        this.comprases = comprases;
    }

@ManyToMany(fetch=FetchType.EAGER)
    @JoinTable(name="ditribuidores_sucursales", catalog="tribuo", joinColumns = { 
        @JoinColumn(name="sucursal", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="distribuidor", nullable=false, updatable=false) })
    public Set<Distribuidores> getDistribuidoreses() {
        return this.distribuidoreses;
    }
    
    public void setDistribuidoreses(Set<Distribuidores> distribuidoreses) {
        this.distribuidoreses = distribuidoreses;
    }




}


