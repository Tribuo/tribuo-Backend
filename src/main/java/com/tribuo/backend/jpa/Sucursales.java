package com.tribuo.backend.jpa;
// Generated Jun 2, 2017 9:58:33 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Sucursales generated by hbm2java
 */
@Entity
@Table(name = "sucursales",
        catalog = "tribuo",
        uniqueConstraints = @UniqueConstraint(columnNames = {"id_sucursal", "tienda"})
)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Sucursales implements java.io.Serializable {

    private int idSucursal;
    private Tiendas tiendas;
    private String direccion;
    private String ciudad;
    private Set<Ventas> ventases;
    private Set<ProductosTiendas> productosTiendases;
    private Set<Compras> comprases;
    private Set<Distribuidores> distribuidoreses;

    /**
     *
     */
    public Sucursales() {
        this.distribuidoreses = new HashSet<>(0);
        this.comprases = new HashSet<>(0);
        this.productosTiendases = new HashSet<>(0);
        this.ventases = new HashSet<>(0);
    }

    /**
     *
     * @param tiendas
     * @param direccion
     * @param ciudad
     */
    public Sucursales(Tiendas tiendas, String direccion, String ciudad) {
        this.distribuidoreses = new HashSet<>(0);
        this.comprases = new HashSet<>(0);
        this.productosTiendases = new HashSet<>(0);
        this.ventases = new HashSet<>(0);
        this.tiendas = tiendas;
        this.direccion = direccion;
        this.ciudad = ciudad;
    }

    /**
     *
     * @param tiendas
     * @param direccion
     * @param ciudad
     * @param ventases
     * @param productosTiendases
     * @param comprases
     * @param distribuidoreses
     */
    public Sucursales(Tiendas tiendas, String direccion, String ciudad, Set<Ventas> ventases, Set<ProductosTiendas> productosTiendases, Set<Compras> comprases, Set<Distribuidores> distribuidoreses) {
        this.distribuidoreses = new HashSet<>(0);
        this.comprases = new HashSet<>(0);
        this.productosTiendases = new HashSet<>(0);
        this.ventases = new HashSet<>(0);
        this.tiendas = tiendas;
        this.direccion = direccion;
        this.ciudad = ciudad;
        this.ventases = ventases;
        this.productosTiendases = productosTiendases;
        this.comprases = comprases;
        this.distribuidoreses = distribuidoreses;
    }

    /**
     *
     * @return
     */
    @Id
    @Column(name = "id_sucursal", unique = true, nullable = false)
    public int getIdSucursal() {
        return this.idSucursal;
    }

    /**
     *
     * @param idSucursal
     */
    public void setIdSucursal(int idSucursal) {
        this.idSucursal = idSucursal;
    }

    /**
     *
     * @return
     */
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "tienda", nullable = false)
    public Tiendas getTiendas() {
        return this.tiendas;
    }

    /**
     *
     * @param tiendas
     */
    public void setTiendas(Tiendas tiendas) {
        this.tiendas = tiendas;
    }

    /**
     *
     * @return
     */
    @Column(name = "direccion", nullable = false, length = 75)
    public String getDireccion() {
        return this.direccion;
    }

    /**
     *
     * @param direccion
     */
    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    /**
     *
     * @return
     */
    @Column(name = "ciudad", nullable = false, length = 75)
    public String getCiudad() {
        return this.ciudad;
    }

    /**
     *
     * @param ciudad
     */
    public void setCiudad(String ciudad) {
        this.ciudad = ciudad;
    }

    /**
     *
     * @return
     */
    @JsonIgnore
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "sucursales")
    public Set<Ventas> getVentases() {
        return this.ventases;
    }

    /**
     *
     * @param ventases
     */
    public void setVentases(Set<Ventas> ventases) {
        this.ventases = ventases;
    }

    /**
     *
     * @return
     */
    @JsonIgnore
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "sucursales")
    public Set<ProductosTiendas> getProductosTiendases() {
        return this.productosTiendases;
    }

    /**
     *
     * @param productosTiendases
     */
    public void setProductosTiendases(Set<ProductosTiendas> productosTiendases) {
        this.productosTiendases = productosTiendases;
    }

    /**
     *
     * @return
     */
    @JsonIgnore
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "sucursales")
    public Set<Compras> getComprases() {
        return this.comprases;
    }

    /**
     *
     * @param comprases
     */
    public void setComprases(Set<Compras> comprases) {
        this.comprases = comprases;
    }

    /**
     *
     * @return
     */
    @JsonIgnore
    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(name = "ditribuidores_sucursales", catalog = "tribuo", joinColumns = {
        @JoinColumn(name = "sucursal", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "distribuidor", nullable = false, updatable = false)})
    public Set<Distribuidores> getDistribuidoreses() {
        return this.distribuidoreses;
    }

    /**
     *
     * @param distribuidoreses
     */
    public void setDistribuidoreses(Set<Distribuidores> distribuidoreses) {
        this.distribuidoreses = distribuidoreses;
    }

}
